{
  "IntroTitle": "Just Neat and Simple React UI",
  "SubTitle": "It's easy and simple for developers to use",
  "StartButton": "Get Started",
  "Docs": "Docs",
  "Docs_Description_Title": "Description",
  "Docs_Description_SubTItle": "Neat UI is Just Neat and Simple React UI.",
  "Docs_Description_1": "This UI library was developed for my ease of use",
  "Docs_Description_2": "but I tried to make it as simple as possible for other developers to use it easily.",
  "Docs_Install": "Install",
  "Components": "Components",
  "Alert": "Alert",
  "Alert_Description": "Alert is used to display information on the screen.",
  "AutoComplete": "AutoComplete",
  "AutoComplete_Description": "AutoComplete is a normal text input enhanced by a panel of suggested options.",
  "Avatar": "Avatar",
  "Avatar_Description": "Avatar is a used to represent user, and displays the profile picture, initials or fallback icon.",
  "Button": "Button",
  "Button_Description": "Button is used to trigger an action or event, such as submitting a form, opening a Dialog, canceling an action, or performing a delete operation.",
  "Chip": "Chip",
  "Chip_Description": "Chip is compact elements that represent an input, attribute, or action.",
  "Flex": "Flex",
  "Flex_Description": "Flex is Box with display set to flex and comes with helpful style shorthand.",
  "Spinner": "Spinner",
  "Spinner_Description": "Spinner is a visual cue that an action is processing awaiting a course of change or a result.",
  "Switch": "Switch",
  "Switch_Description": "Switch is used as an alternative for the checkbox component.",
  "Code": "Code",
  "Code_Description": "Code is used to display inline code",
  "Hooks": "Hooks",
  "useBoolean": "useBoolean",
  "useBoolean_Description": "useBoolean is a custom hook used to manage a boolean value",
  "useClipBoard": "useClipBoard",
  "useClipBoard_Description": "useClipBoard is handles copying content to clipboard.",
  "useDeviceType": "useDeviceType",
  "useDeviceType_Description": "useDeviceType is detects the type of device the user is using and provides the appropriate UI for that device.",
  "useHover": "useHover",
  "useHover_Description": "useHover is allows you to track whether an element is being hovered over or not.",
  "useMediaQuery": "useMediaQuery",
  "useMediaQuery_Description": "useMediaQuery is matches to a CSS media query",
  "Examples": "Examples",
  "PropsName": "PropsName",
  "Type": "Type",
  "Description": "Description"
}
